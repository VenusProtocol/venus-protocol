-- These are included in each scenario

Macro Successfully
    Invariant Success

Macro AllowFailures
    ClearInvariants Success

Macro PricedComptroller closeFactor=0.1 maxAssets=20
    Unitroller Deploy
    PriceOracle Deploy Simple
    ComptrollerImpl Deploy Scenario ScenComptroller
    Unitroller SetPendingImpl ScenComptroller
    ComptrollerImpl ScenComptroller Become
    ComptrollerLens Deploy
    Comptroller SetComptrollerLens (Address ComptrollerLens)
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero) -- if listing vBnb use ListedBNBToken to replace proxy
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetCloseFactor closeFactor

Macro PricedComptrollerWithLiquidator treasury closeFactor=0.1 maxAssets=20
    PricedComptroller closeFactor maxAssets
    Liquidator Deploy Admin Admin (Comptroller Address) Admin treasury 5e16  -- treasury percent = 5%
    Comptroller SetLiquidatorContract (Address Liquidator)

Macro PricedComptrollerWithVAIController closeFactor=0.1 maxAssets=20
    PricedComptroller closeFactor maxAssets
    NewVAIController
    Comptroller SetVAIController (Address VAIUnitroller)
    VAIController SetComptroller (Address Unitroller)
    Comptroller SetVAIMintRate 5e3
    NewVAI

Macro NewComptroller price=1.0 closeFactor=0.1 maxAssets=20
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    ComptrollerImpl Deploy Scenario ScenComptroller
    Unitroller SetPendingImpl ScenComptroller
    ComptrollerImpl ScenComptroller Become
    ComptrollerLens Deploy
    Comptroller SetComptrollerLens (Address ComptrollerLens)
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero) -- if listing vBnb use ListedBNBToken to replace proxy
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetCloseFactor closeFactor

Macro NewFeeComptroller price=1.0 closeFactor=0.1 maxAssets=20
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    ComptrollerImpl Deploy Scenario ScenComptroller
    Unitroller SetPendingImpl ScenComptroller
    ComptrollerImpl ScenComptroller Become
    ComptrollerLens Deploy
    Comptroller SetComptrollerLens (Address ComptrollerLens)
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero) -- if listing vBnb use ListedBNBToken to replace proxy
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetCloseFactor closeFactor
    Comptroller SetTreasuryData Guardian Jared 1e14

Macro NewComptrollerWithVAIController price=1.0 closeFactor=0.1 maxAssets=20
    NewComptroller price closeFactor maxAssets
    NewVAIController
    Comptroller SetVAIController (Address VAIUnitroller)
    VAIController SetComptroller (Address Unitroller)
    Comptroller SetVAIMintRate 5e3

Macro NewVAIController
    VAIUnitroller Deploy
    --current
    VAIControllerImpl Deploy Scenario ScenVAIController
    VAIUnitroller SetPendingImpl ScenVAIController
    VAIControllerImpl ScenVAIController Become
    VAIController Initialize

Macro NewVAI
    VAI Deploy Admin
    VAI Rely (Address VAIUnitroller)
    VAIController Send "setVAIAddress(address)" (Address VAI)

Macro NewVToken bep20 vToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 tokenType=Standard delegatorType=VBep20DelegatorScenario vTokenType=VBep20DelegateScenario admin=Admin becomeImplementationData="0x0"
    Bep20 Deploy tokenType bep20 bep20
    InterestRateModel Deploy Fixed StdInterest borrowRate -- Note: interest rate model probably shouldn't be global
    VTokenDelegate Deploy vTokenType vBep20Delegate
    VToken Deploy delegatorType vToken vToken (Bep20 bep20 Address) (Comptroller Address) (InterestRateModel StdInterest Address) initialExchangeRate decimals admin (VTokenDelegate vBep20Delegate Address) becomeImplementationData

-- Same as NewVToken but does not deploy an BEP20. Used for special BEP20s that are initialized differently
Macro NewVTokenBringBEP20 bep20 vToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 delegatorType=VBep20DelegatorScenario vTokenType=VBep20DelegateScenario admin=Admin becomeImplementationData="0x0"
    InterestRateModel Deploy Fixed StdInterest borrowRate -- Note: interest rate model probably shouldn't be global
    VTokenDelegate Deploy vTokenType vBep20Delegate
    VToken Deploy delegatorType vToken vToken (Bep20 bep20 Address) (Comptroller Address) (InterestRateModel StdInterest Address) initialExchangeRate decimals admin (VTokenDelegate vBep20Delegate Address) becomeImplementationData
    Comptroller SetMarketSupplyCaps (vToken) (2000e18)

Macro NewVTokenImmutable bep20 vToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 tokenType=Standard vTokenType=Scenario admin=Admin
    Bep20 Deploy tokenType bep20 bep20
    InterestRateModel Deploy Fixed StdInterest borrowRate -- Note: interest rate model probably shouldn't be global
    VToken Deploy vTokenType vToken vToken (Bep20 bep20 Address) (Comptroller Address) (InterestRateModel StdInterest Address) initialExchangeRate decimals admin

Macro NewBNBToken vToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 admin=Admin
    InterestRateModel Deploy Fixed StdInterest borrowRate -- Note: interest rate model probably shouldn't be global
    VToken Deploy VBNBScenario vToken vToken (Comptroller Address) (InterestRateModel StdInterest Address) initialExchangeRate decimals admin

Macro ListedVToken bep20 vToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 tokenType=Standard delegatorType=VBep20DelegatorScenario vTokenType=VBep20DelegateScenario admin=Admin
    NewVToken bep20 vToken borrowRate initialExchangeRate decimals tokenType delegatorType vTokenType admin
    Comptroller SupportMarket vToken

Macro ListedVTokenImmutable bep20 vToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 tokenType=Standard vTokenType=Scenario admin=Admin
    NewVTokenImmutable bep20 vToken borrowRate initialExchangeRate decimals tokenType vTokenType admin
    Comptroller SupportMarket vToken

Macro ListedBNBToken vToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 admin=Admin
    NewBNBToken vToken borrowRate initialExchangeRate decimals admin
    Comptroller SupportMarket vToken
    Comptroller SetMarketSupplyCaps (vToken) (2000e18)
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address vBNB) (Address Zero) (Address Zero) (Address Zero) (Address Zero)
    Comptroller SetPriceOracle (PriceOracleProxy Address)

Macro ListedBNBTokenMinted vToken borrowRate=0.000005 initialExchangeRate=2e9 decimals=8 admin=Admin
    NewBNBToken vToken borrowRate initialExchangeRate decimals admin
    Comptroller SupportMarket vToken
    Comptroller SetMarketSupplyCaps (vToken) (2000e18)
    CallMintBnb Root 1e18 vToken

Macro SetPriceCF vToken price collateralFactor
    PriceOracle SetPrice vToken price
    Comptroller SetCollateralFactor vToken collateralFactor

Macro Give user amount bep20
    Bep20 bep20 Faucet user amount

Macro GiveVAI user amount
    VAI Faucet user amount

Macro PrepVAI user amount token allowanceAmount=Nothing
    GiveVAI user amount
    From user (VAI Approve token (Default allowanceAmount amount))

Macro Donate token amount
    (Trx Value amount (VToken token Donate))

Macro Prep user amount bep20 token allowanceAmount=Nothing
    Bep20 bep20 Faucet user amount
    From user (Bep20 bep20 Approve token (Default allowanceAmount amount))

Macro Allow user token
    From user (Bep20 (VToken token Underlying) Approve token UInt256Max)

Macro AccrueInterest token
    VToken token AccrueInterest

Macro Mint user amount token
    From user (VToken token Mint amount)

Macro MintBehalf payer receiver amount token
    From payer (VToken token MintBehalf receiver amount)

Macro SendMintBnb user amount token
    From user (Trx GasPrice 0 (Trx Value amount (Send token amount)))

Macro CallMintBnb user amount token
    From user (Trx GasPrice 0 (Trx Value amount (VToken token Mint)))

Macro Redeem user amount token
    From user (VToken token Redeem amount)

Macro RedeemBnb user amount token
    Trx GasPrice 0 (From user (VToken token Redeem amount))

Macro RedeemUnderlying user amount token
    From user (VToken token RedeemUnderlying amount)

Macro RedeemUnderlyingBnb user amount token
    Trx GasPrice 0 (From user (VToken token RedeemUnderlying amount))

Macro BorrowBnb user amount token
    Trx GasPrice 0 (From user (VToken token Borrow amount))

Macro Borrow user amount token
    From user (VToken token Borrow amount)

Macro RepayBorrow user amount token
    From user (VToken token RepayBorrow amount)

Macro MintVAI user amount
    From user (VAIController Mint amount)

Macro RepayVAI user amount
    From user (VAIController Repay amount)

Macro RepayBorrowBnb user amount token
    From user (Trx GasPrice 0 (Trx Value amount (VToken token RepayBorrow)))

Macro RepayBorrowBnbMax user amount token
    From user (Trx GasPrice 0 (Trx Value amount (Maximillion RepayBehalf user)))

Macro RepayBorrowBehalf user behalf amount token
    From user (VToken token RepayBorrowBehalf behalf amount)

Macro RepayBorrowBnbBehalf user behalf amount token
    From user (Trx GasPrice 0 (Trx Value amount (VToken token RepayBorrowBehalf behalf)))

Macro ApproveLiquidation liquidator token amount
    From liquidator (Bep20 (VToken token Underlying) Approve (Address Liquidator) amount)

Macro Liquidate liquidator _ borrower amount token _ collateral
    From liquidator (Liquidator LiquidateBorrow (Address token) borrower amount (Address collateral))

Macro LiquidateVAI liquidator _ borrower amount _ collateral
    From liquidator (Liquidator LiquidateBorrow (Address VAIController) borrower amount (Address collateral))

Macro LiquidateBnbColl liquidator _ borrower amount token _ collateral
    From liquidator (Trx GasPrice 0 (Liquidator LiquidateBorrow (Address token) Liquidate borrower amount (Address collateral)))

Macro LiquidateBnbBorrow liquidator _ borrower amount token _ collateral
    From liquidator (Trx GasPrice 0 (Trx Value amount (Liquidator LiquidateBorrow (Address token) Liquidate borrower amount (Address collateral))))

Macro Seize amount token caller liquidator borrower
    From caller (VToken token Seize liquidator borrower amount)

Macro EvilSeize token amount treasure seizer seizee
    VToken token EvilSeize treasure seizer seizee amount

Macro Support vToken collateralFactor=0.5
    Comptroller SupportMarket vToken
    Comptroller SetCollateralFactor vToken collateralFactor

Macro SetCollateralFactor vToken collateralFactor=0.5
    Comptroller SetCollateralFactor vToken collateralFactor

Macro AddReserves amount token user=Root
    From user (VToken token AddReserves amount)

Macro ReduceReserves amount token
    VToken token ReduceReserves amount

Macro FastForward n blocks
    Comptroller FastForward n blocks

Macro EnterMarkets user ...markets
    From user (Comptroller EnterMarkets markets)

Macro ExitMarket user market
    From user (Comptroller ExitMarket market)

Macro Transfer from to amount token
    From from (Bep20 token Transfer to amount)

Macro Cash vToken
    Read Bep20 (VToken vToken Underlying) TokenBalance vToken

Macro QuickMint amount vToken from=Me
    Give from amount (VToken vToken Underlying)
    Allow from vToken
    From from (VToken vToken Mint amount)

Macro QuickBorrow amount vToken ...collateral
    From Me (Comptroller EnterMarkets collateral)
    From Me (Comptroller EnterMarkets (vToken))
    From Me (VToken vToken Borrow amount)

-- Macro for performing a borrow with the sole
-- purpose of adding interest to the bep20 market
Macro BorrowAndRepayWithInterest bep20 vToken amount interestAmount interestRate blocks reserveRate=0
    -- TODO: Make invariant success for these?
    -- TODO: Named args as macros
    InterestRateModel Deploy Fixed Std interestRate
    VToken vToken SetInterestRateModel (InterestRateModel Std Address)
    VToken vToken SetReserveFactor reserveRate
    ListedVToken COLLAT cCOLLAT
    Comptroller SetCollateralFactor cCOLLAT 0.9
    Comptroller SetMarketSupplyCaps (cCOLLAT) (2e30)
    Prep Torrey 1e30 COLLAT cCOLLAT
    Mint Torrey 1e30 cCOLLAT
    EnterMarkets Torrey cCOLLAT vToken
    Assert True (Comptroller CheckMembership Torrey cCOLLAT)
    Assert True (Comptroller CheckMembership Torrey vToken)
    Borrow Torrey amount vToken
    -- Cool, we've borrowed, now let's accrue interest then repay all
    FastForward blocks Blocks
    -- RepayBorrow Torrey (VToken BorrowBalance Torrey) vToken
    From Torrey (Bep20 bep20 Approve vToken amount)
    RepayBorrow Torrey amount vToken
    From Torrey (Bep20 bep20 Approve vToken interestAmount)
    Give Torrey interestAmount bep20
    RepayBorrow Torrey interestAmount vToken
    Assert Equal (VToken vToken BorrowBalance Torrey) Zero

-- Macro for performing a borrow with the sole
-- purpose of adding interest to the bnb market
Macro BorrowAndRepayBnbWithInterest vBnb amount interestAmount interestRate blocks reserveRate=0
    -- TODO: Make invariant success for these?
    -- TODO: Named args as macros
    InterestRateModel Deploy Fixed Std interestRate
    VToken vBnb SetInterestRateModel (InterestRateModel Std Address)
    VToken vBnb SetReserveFactor reserveRate
    ListedVToken COLLAT cCOLLAT
    Comptroller SetCollateralFactor cCOLLAT 0.9
    Comptroller SetMarketSupplyCaps (cCOLLAT) (2e30)
    Prep Torrey 1e30 COLLAT cCOLLAT
    Mint Torrey 1e30 cCOLLAT
    EnterMarkets Torrey cCOLLAT vBnb
    Assert True (Comptroller CheckMembership Torrey cCOLLAT)
    Assert True (Comptroller CheckMembership Torrey vBnb)
    Borrow Torrey amount vBnb
    -- Cool, we've borrowed, now let's accrue interest then repay all
    FastForward blocks Blocks
    -- RepayBorrow Torrey (VToken BorrowBalance Torrey) vBnb
    RepayBorrowBnb Torrey amount vBnb
    RepayBorrowBnb Torrey interestAmount vBnb
    Assert Equal (VToken vBnb BorrowBalance Torrey) Zero

Macro DeployVault xvs
    XVSVaultImpl Deploy VaultImpl
    XVSVaultProxy Deploy
    XVSVaultProxy SetPendingImplementation VaultImpl
    XVSVaultImpl VaultImpl Become
    XVSStore Deploy
    XVSStore SetNewOwner (Address XVSVault)
    XVSVault SetXvsStore (Address xvs) (Address XVSStore)
    XVSVault Add (Address xvs) 1000 (Address xvs) 300 12345
