-- Redeem Tests

Test "Mint then Redeem All"
    NewFeeComptroller
    ListedVToken WBTC fWBTC initialExchangeRate:0.1 tokenType:WBTC
    Comptroller SetMarketSupplyCaps (fWBTC) (2e30)
    Prep Geoff 70e8 WBTC fWBTC
    Mint Geoff 50e8 fWBTC
    -- Check current affairs
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (Bep20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (VToken fWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    RedeemUnderlying Geoff 50e8 fWBTC
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) Zero
    Assert Equal (Bep20 WBTC TokenBalance Geoff) 6.9995e9

Test "Mint then Redeem Part"
    NewFeeComptroller
    ListedVToken WBTC fWBTC initialExchangeRate:0.1 tokenType:WBTC
    Comptroller SetMarketSupplyCaps (fWBTC) (2e30)
    Prep Geoff 70e8 WBTC fWBTC
    Mint Geoff 50e8 fWBTC
    -- Check current affairs
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (Bep20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (VToken fWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    RedeemUnderlying Geoff 25e8 fWBTC
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 250e8
    Assert Equal (Bep20 WBTC TokenBalance Geoff) 4.49975e9

Test "Mint then Redeem Too Much"
    NewFeeComptroller
    ListedVToken WBTC fWBTC initialExchangeRate:0.1 tokenType:WBTC
    Comptroller SetMarketSupplyCaps (fWBTC) (2e30)
    Prep Geoff 70e8 WBTC fWBTC
    Mint Geoff 50e8 fWBTC
    -- Check and hold static
    Invariant Static (VToken fWBTC ExchangeRateStored)
    Invariant Remains (Bep20 fWBTC TokenBalance Geoff) 500e8
    Invariant Remains (Bep20 WBTC TokenBalance Geoff) 20e8
    -- Now redeem after some time
    FastForward 2 Blocks
    AllowFailures
    RedeemUnderlying Geoff 50.1e8 fWBTC
    Assert Failure MATH_ERROR REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED "3"

Test "Mint then Redeem Zero"
    NewFeeComptroller
    ListedVToken WBTC fWBTC initialExchangeRate:0.1 tokenType:WBTC
    Comptroller SetMarketSupplyCaps (fWBTC) (2e30)
    Prep Geoff 70e8 WBTC fWBTC
    Mint Geoff 50e8 fWBTC
    -- Check current affairs
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (Bep20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (VToken fWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    RedeemUnderlying Geoff 0e8 fWBTC
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (Bep20 WBTC TokenBalance Geoff) 20e8

Test "Mint then redeem with interest - no reserves"
    NewFeeComptroller
    ListedVToken WBTC fWBTC initialExchangeRate:0.1 tokenType:WBTC
    Comptroller SetMarketSupplyCaps (fWBTC) (2e30)
    Invariant Remains (VToken fWBTC Reserves) Zero
    Prep Geoff 50e8 WBTC fWBTC
    Mint Geoff 50e8 fWBTC
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (VToken fWBTC UnderlyingBalance Geoff) 50e8
    Assert Equal (VToken fWBTC ExchangeRate) 0.1
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest WBTC fWBTC 10e8 5e8 interestRate:0.000001 blocks:500000
    -- We've accrued .001% interest for 500000 blocks, or 50% of the principal,
    --   thus, we should have accrued 5e8 of interest for the protocol
    --   This is due pro-rata to all suppliers, but we just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (VToken fWBTC UnderlyingBalance Geoff) 55e8
    Assert Equal (VToken fWBTC ExchangeRate) 0.11
    -- Now redeem all with interest
    -- Exchange rate is now 55e8 รท 50e-1 = 1.1e-1
    -- 500e-1 * 1.1e-1 = 55e8
    RedeemUnderlying Geoff 55e8 fWBTC
    Assert Equal (Bep20 WBTC TokenBalance Geoff) 5.49945e9
    Assert Equal (Bep20 WBTC TokenBalance fWBTC) 0e8
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 0e8
    Assert Equal (VToken fWBTC UnderlyingBalance Geoff) 0e8
    Assert Equal (VToken fWBTC ExchangeRate) 0.1

Test "Mint then redeem part with interest - no reserves"
    NewFeeComptroller
    ListedVToken WBTC fWBTC initialExchangeRate:0.1 tokenType:WBTC
    Comptroller SetMarketSupplyCaps (fWBTC) (2e30)
    Invariant Remains (VToken fWBTC Reserves) Zero
    Prep Geoff 50e8 WBTC fWBTC
    Mint Geoff 50e8 fWBTC
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (VToken fWBTC UnderlyingBalance Geoff) 50e8
    Assert Equal (VToken fWBTC ExchangeRate) 0.1
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest WBTC fWBTC 10e8 5e8 interestRate:0.000001 blocks:500000
    -- We've accrued .001% interest for 500000 blocks, or 50% of the principal,
    --   thus, we should have accrued 5e8 of interest for the protocol
    --   This is due pro-rata to all suppliers, but we just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (VToken fWBTC UnderlyingBalance Geoff) 55e8
    Assert Equal (VToken fWBTC ExchangeRate) 0.11
    -- Now redeem all with interest
    -- Exchange rate is now 55e8 รท 50e-1 = 1.1e-1
    -- 499e-1 * 1.1e-1 = 54.89e8
    RedeemUnderlying Geoff 54.89e8 fWBTC
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 1e8
    Assert Equal (VToken fWBTC UnderlyingBalance Geoff) 0.11e8
    Assert Equal (VToken fWBTC ExchangeRate) 0.11

Test "Mint then redeem with reserves and interest"
    NewFeeComptroller
    ListedVToken WBTC fWBTC initialExchangeRate:0.1 tokenType:WBTC
    Comptroller SetMarketSupplyCaps (fWBTC) (2e30)
    Prep Geoff 50e8 WBTC fWBTC
    Mint Geoff 50e8 fWBTC
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (VToken fWBTC UnderlyingBalance Geoff) 50e8
    Assert Equal (VToken fWBTC ExchangeRate) 0.1
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest WBTC fWBTC 10e8 5e8 interestRate:0.000001 blocks:500000 reserveRate:0.2
    -- We've accrued .001% interest for 500000 blocks, or 50% of the principal,
    --   thus, we should have accrued 5e8 of interest for the protocol
    --   The reserves should get 20% of this, or 1e8, and the rest
    --   is due pro-rata to all suppliers. We just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (VToken fWBTC Reserves) 1e8
    Assert Equal (VToken fWBTC UnderlyingBalance Geoff) 54e8
    -- 55e8 + 0e8 - 1e8 / 500
    Assert Equal (VToken fWBTC ExchangeRate) 0.108
    -- Now redeem all with interest
    -- Exchange rate is 1.08e-1
    -- 500e8 * 1.08e-1 = 54e8
    RedeemUnderlying Geoff 54e8 fWBTC
    Assert Equal (Bep20 WBTC TokenBalance Geoff) 5.39946e9
    Assert Equal (Bep20 WBTC TokenBalance fWBTC) 1e8
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 0e8
    Assert Equal (VToken fWBTC Reserves) 1e8
    Assert Equal (VToken fWBTC UnderlyingBalance Geoff) 0e8
    Assert Equal (VToken fWBTC ExchangeRate) 0.1

Test "Two users Mint, one redeems"
    NewFeeComptroller
    ListedVToken WBTC fWBTC initialExchangeRate:0.1 tokenType:WBTC
    Comptroller SetMarketSupplyCaps (fWBTC) (2e30)
    Prep Geoff Some WBTC fWBTC
    Prep Torrey Some WBTC fWBTC
    Mint Geoff 2e8 fWBTC
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 20e8
    Assert Equal (Bep20 fWBTC TotalSupply) 20e8
    Mint Torrey 2e8 fWBTC
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 20e8
    Assert Equal (Bep20 fWBTC TokenBalance Torrey) 20e8
    Assert Equal (Bep20 fWBTC TotalSupply) 40e8
    RedeemUnderlying Torrey 1e8 fWBTC
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 20e8
    Assert Equal (Bep20 fWBTC TokenBalance Torrey) 10e8
    Assert Equal (Bep20 fWBTC TotalSupply) 30e8

Test "Mint then Redeem 1 wei of underlying is allowed for 1:1 assets"
    NewFeeComptroller
    ListedVToken WBTC fWBTC initialExchangeRate:0.1 tokenType:WBTC
    Comptroller SetMarketSupplyCaps (fWBTC) (2e30)
    Prep Geoff 70e8 WBTC fWBTC
    Mint Geoff 50e8 fWBTC
    -- Check current affairs
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 500e8
    Assert Equal (Bep20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (VToken fWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    RedeemUnderlying Geoff 1 fWBTC
    -- After affairs
    Assert Equal (Bep20 fWBTC TokenBalance Geoff) 49999999990
    Assert Equal (Bep20 WBTC TokenBalance Geoff) 2000000001
